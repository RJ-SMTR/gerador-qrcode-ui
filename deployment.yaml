# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gerador-qrcode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gerador-qrcode
  template:
    metadata:
      labels:
        app: gerador-qrcode
    spec:
      containers:
      - name: gerador-qrcode
        image: gcr.io/$PROJECT_ID/$IMAGE_GERADOR_QRCODE:$GITHUB_SHA
      restartPolicy: Always
---
# Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gerador-qrcode
  name: gerador-qrcode
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    app: gerador-qrcode
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gerador-qrcode-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 200m
    nginx.ingress.kubernetes.io/auth-response-headers: >-
      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-signin: >-
      https://gerador-qrcode.mobilidade.rio/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/auth-url: >-
      http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
spec:
  tls:
    - hosts:
        - gerador-qrcode.mobilidade.rio
      secretName: gerador-qrcode-tls
  rules:
    - host: gerador-qrcode.mobilidade.rio
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gerador-qrcode
                port:
                  number: 80
---
# Ingress Outpost
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: gerador-qrcode-outpost
    namespace: authentik
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/issuer: "letsencrypt-production"
spec:
    tls:
    - hosts:
        - gerador-qrcode.mobilidade.rio
      secretName: authentik-outpost-tls
    rules:
        - host: gerador-qrcode.mobilidade.rio
          http:
              paths:
                  - path: /outpost.goauthentik.io
                    pathType: Prefix
                    backend:
                        # Or, to use an external Outpost, create an ExternalName service and reference that here.
                        # See https://kubernetes.io/docs/concepts/services-networking/service/#externalname
                        service:
                            name: ak-outpost-authentik-embedded-outpost
                            port:
                                name: http
---
# Issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    email: borismarinho.smtr@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-production
    solvers:
      - http01:
          ingress:
            class: nginx
